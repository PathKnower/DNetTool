<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="/var/log/nlog/internal.log">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- Добро пожаловать в таргеты, здесь прописываются каким именно образом логируется то или иное действие. 
                  Так как скину чуть ниже ссылку на официальный док по построению, можешь их потом настроить как душе угодно,
                  а пока, расскажу про 2 вещи, layout=разметка и fileName=путь файла:
                    -layout: настраивает каким именно образом будет выводится сообщение в файл. Всё, что в фигурных скобках,
                  подставляет значения и формат. По честному, самому лень разбираться, ибо я взаимодействую с кодом.
                  Но если тебе что-то не понравится, можешь добавить детальности или наоборот, поубавить, на каждый из таргетов. 
                    -fileName: Это сам путь до лога, ВАЖНО: Не трогай первые 2 уровня директорий, они маунтятся в docker контейнер
                     и это позволяет вытаскивать из контейнеров логи. Остальные пути, имена и прочее, можешь опять-таки 
                     настроить, как тебе угодно, для каждого таргета.
                     
                  Собственно это все, вот ссылка на офф доки по targets, там можно увидеть всё и даже больше:
                   Ссылка на обшую инфу про конфигурационный файл: https://github.com/NLog/NLog/wiki/Configuration-file
                   Ссылка про targets: https://github.com/NLog/NLog/wiki/Configuration-file#targets -->

    <target xsi:type="File" name="Trace" fileName="Logs/Logs/Dev/Trace-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <target xsi:type="File" name="Debug" fileName="Logs/Logs/Dev/Debug-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <target xsi:type="File" name="Info" fileName="Logs/Logs/Info/Info-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="Warn" fileName="Logs/Logs/Warning/Warning-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="Error" fileName="Logs/Logs/Errors/Error-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="Fatal" fileName="Logs/Logs/Fatal-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="MicrosoftError" fileName="Logs/Logs/MicrosoftError-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <target xsi:type="File" name="MicrosoftTrace" fileName="Logs/Logs/Microsoft/Trace-Info-${shortdate}.log"
              layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>

    <logger name="Microsoft.*" maxLevel="Info" writeTo="MicrosoftTrace" final="true" />
    <logger name="Microsoft.*" minLevel="Error" writeTo="MicrosoftError" />

    <!-- Лог уровня Fatal самый важный, значит что-то заставляет приложение лететь в задницу, 
                  как камикадзе во время японских войн. Я постарался максимально логировать этот эксепшн, но, если что-то идёт не так,
                смотри уровень Trace, там все максимально подробно. -->
    <logger name="*" minlevel="Fatal" writeTo="Fatal" />

    <!-- Логи уровня Error, значит произошли весомые ошибки, на которые определенно стоит обратить внимание. 
              Опять же, смотри Trace. -->
    <logger name="*" minlevel="Error" writeTo="Error" />

    <!-- Лог уровня Warning, тоже стоить брать в расчёт, ибо может показывать, что может что-то пойти не так, 
                но при этом, приложение более-менее нормально функционирует, хотя, могут не работать некоторые функции. -->
    <logger name="*" minlevel="Warn" writeTo="Warn" />

    <!-- Логи уровня Debug и Trace, служат для локализации ошибки и её устранения, стоит сюда заглядывать, 
                если увидел хоть что-то в логах выше уровня Info. -->
    <logger name="*" minlevel="Trace" writeTo="Trace" />
    <logger name="*" minlevel="Debug" writeTo="Debug" />

    <!-- Лог уровня Info, в основном служат для некоторой информации, что-то вроде о старте приложения, все ли в порядке
                в общем, тут чисто информация для ознакомления. -->
    <logger name="*" minlevel="Info" writeTo="Info" />
  </rules>
</nlog>

